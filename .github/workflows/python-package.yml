# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pytest-cov
          python -m pip install .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest

      - name: Pytest coverage
        if: ${{ matrix.python-version == '3.10' && github.event_name == 'pull_request' }}
        run: |
          pytest --junitxml=pytest.xml --cov=redis_decorators tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverageComment
        if: ${{ matrix.python-version == '3.10' && github.event_name == 'pull_request' }}
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: pytest-coverage.txt
          junitxml-path: pytest.xml

      - name: Pytest coverage README badge
        if: ${{ matrix.python-version == '3.10' && github.event_name == 'pull_request' }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: a4b117f575fe24d0555e1bee9e682013
          filename: pytest-coverage__master.json
          label: Coverage Report
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: python
